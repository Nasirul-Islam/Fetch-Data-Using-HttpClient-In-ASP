@{
    ViewData["Title"] = "Home Page";
}
@model FetchDataByHttpClientInASP.Models.TodoItem;

<div class="text-center">
    <h1 class="display-4">Welcome</h1>
    <h2>Todo Item</h2>
</div>


@if (Model != null)
{
    <p><strong>Todo ID:</strong> @Model.Id</p>
    <p><strong>Title:</strong> @Model.Title</p>
    <p><strong>Completed:</strong> @(Model.Completed ? "Yes" : "No")</p>
}
else
{
    <p>Error fetching data</p>
}

<div class="text-center">
    <h2>Users List:</h2>
    <!-- Button to Load Users -->
    <button id="loadUsersBtn">Load Users</button>

    <!-- Container to display users data -->
    <div id="usersContainer"></div>
    @* <button asp-controller="Home" asp-action="LoadUsers">Load Users</button> *@
</div>

@section Scripts{

    <script>
        // data access that's comes from controller
        const data = @Html.Raw(Json.Serialize(Model));
        console.log(data);

        document.getElementById('loadUsersBtn').addEventListener('click', function () {
            fetch('/Home/LoadUsers') // Server-side endpoint
                .then(response => response.json())
                .then(users => {
                    let usersContainer = document.getElementById('usersContainer');

                    // Clear existing content
                    usersContainer.innerHTML = '';

                    // Loop through and display users
                    users.forEach(user => {
                        usersContainer.innerHTML += `
                                <div>
                                    <p><strong>Name:</strong> ${user.name}</p>
                                    <p><strong>Email:</strong> ${user.email}</p>
                                    <p><strong>Phone:</strong> ${user.phone}</p>
                                    <hr />
                                </div>
                            `;
                    });
                })
                .catch(error => console.error('Error fetching users:', error));
        });
    </script>

}
